This project evaluates the run-time speed of MKL library (BLAS & SparseBLAS),
  in the context of Product Quantization (and its variants).

In Product Quantization (and its variants), the pre-computation stage involves
  the computation of inner product with each codeword in the codebooks. This
  can be accelerated by the BLAS library, since it is intrinsically a matrix
  multiplication process.

In Sparse Composite Quantization, the pre-computation is accelerated by imposing
  a sparsity constraint on the codewords. After this, SparseBLAS can be adopted
  to speed-up the inner product pre-computation.

In Tree Quantization, a structured sparsity constraint is also introduced (Each
  dimension is shared by exactly two codebooks). SparseBLAS can also be used to 
  speed-up the computation of inner products.

This project aims at comparing the wall-time consumption of the pre-computation
  stage in PQ, CKM/OPQ, CQ/AQ, SCQ and TQ under various parameter settings.

================================================================================

--------------------------------------------------
| Feature Dim.   |    128 (SIFT) |    960 (GIST) |
--------------------------------------------------
| Batch Size     |     1 |    64 |     1 |    64 |
--------------------------------------------------
| PQ  (built-in) | 0.030 | 1.630 |   n/a |   n/a |
| PQ  (IntelMKL) | 0.020 | 0.210 |   n/a |   n/a |
--------------------------------------------------
| OPQ (built-in) | 0.050 | 2.650 |   n/a |   n/a |
| OPQ (IntelMKL) | 0.020 | 0.280 |   n/a |   n/a |
--------------------------------------------------
| CQ  (built-in) |   n/a |   n/a |   n/a |   n/a |
| CQ  (IntelMKL) |   n/a |   n/a |   n/a |   n/a |
--------------------------------------------------
| SCQ (built-in) |   n/a |   n/a |   n/a |   n/a |
| SCQ (IntelMKL) |   n/a |   n/a |   n/a |   n/a |
--------------------------------------------------
| TQ  (built-in) |   n/a |   n/a |   n/a |   n/a |
| TQ  (IntelMKL) |   n/a |   n/a |   n/a |   n/a |
--------------------------------------------------

Note:
1. All reported time (in millisecond) is the average value of 10k runs, on an
     Intel(R) Xeon(R) E5-2640 CPU @ 2.50GHz, single-threaded.
2. The reported time may not be accurate, since the computer was also running
     other jobs while the experiments were carried out.
3. OPQ/CKM and CQ/AQ are basically the same during the pre-computation stage,
     thus only one is reported for each pair.

